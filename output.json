{ input: [],
  flags: 
   { debug: false,
     progress: false,
     runDev: false,
     d: false,
     runProd: false,
     p: false,
     watch: false,
     w: false,
     bail: false,
     cache: false,
     hot: false,
     profile: true,
     watchStdin: false,
     stdin: false,
     optimizeMinimize: false,
     outputPathinfo: false,
     json: true,
     mode: 'development',
     entry: 'domain',
     config: 'config/webpack.js' },
  pkg: 
   { _from: 'webpack-command',
     _id: 'webpack-command@0.2.1',
     _inBundle: false,
     _integrity: 'sha512-SLNUVd+kYS7IOwAN8z60xNiqn8pzFgtcVjkHY3qEzhZUiUCjiR8VD0c/bj43DDruekpT3ll/xVff4tHkX72hDg==',
     _location: '/webpack-command',
     _phantomChildren: 
      { 'decamelize-keys': '1.1.0',
        'error-ex': '1.3.1',
        'find-up': '2.1.0',
        'graceful-fs': '4.1.11',
        'json-parse-better-errors': '1.0.2',
        'loud-rejection': '1.6.0',
        'memory-fs': '0.4.1',
        'minimist-options': '3.0.2',
        ms: '2.0.0',
        'normalize-package-data': '2.4.0',
        'path-type': '3.0.0',
        pify: '3.0.0',
        'quick-lru': '1.1.0',
        xregexp: '4.0.0' },
     _requested: 
      { type: 'tag',
        registry: true,
        raw: 'webpack-command',
        name: 'webpack-command',
        escapedName: 'webpack-command',
        rawSpec: '',
        saveSpec: null,
        fetchSpec: 'latest' },
     _requiredBy: [ '#DEV:/', '#USER' ],
     _resolved: 'https://registry.npmjs.org/webpack-command/-/webpack-command-0.2.1.tgz',
     _shasum: '67b741026807813947dfc0154fba9db27e3b42eb',
     _spec: 'webpack-command',
     _where: 'C:\\Users\\Majid\\Documents\\GitHub\\OrganicUI',
     author: { name: 'Andrew Powell', email: 'andrew@shellscape.org' },
     bin: { webpack: 'lib/cli.js' },
     bugs: 
      { url: 'https://github.com/webpack-contrib/webpack-command/issues' },
     bundleDependencies: false,
     dependencies: 
      { '@webpack-contrib/config-loader': '^1.0.0',
        '@webpack-contrib/schema-utils': '^1.0.0-beta.0',
        camelcase: '^5.0.0',
        chalk: '^2.3.2',
        debug: '^3.1.0',
        decamelize: '^2.0.0',
        'enhanced-resolve': '^4.0.0',
        'import-local': '^1.0.0',
        isobject: '^3.0.1',
        'loader-utils': '^1.1.0',
        'log-symbols': '^2.2.0',
        'loud-rejection': '^1.6.0',
        meant: '^1.0.1',
        meow: '^5.0.0',
        'merge-options': '^1.0.0',
        'object.values': '^1.0.4',
        opn: '^5.3.0',
        ora: '^2.1.0',
        plur: '^3.0.0',
        'pretty-bytes': '^5.0.0',
        'strip-ansi': '^4.0.0',
        'text-table': '^0.2.0',
        titleize: '^1.0.1',
        'update-notifier': '^2.3.0',
        'v8-compile-cache': '^2.0.0',
        'webpack-log': '^1.1.2',
        wordwrap: '^1.0.0' },
     deprecated: false,
     description: 'üêï A lightweight, modular, and opinionated webpack CLI',
     devDependencies: 
      { '@commitlint/cli': '^6.1.3',
        '@commitlint/config-conventional': '^6.1.3',
        '@webpack-contrib/eslint-config-webpack': '^2.0.4',
        'babel-cli': '^6.26.0',
        'babel-jest': '^22.4.3',
        'babel-plugin-transform-object-rest-spread': '^6.26.0',
        'babel-polyfill': '^6.26.0',
        'babel-preset-env': '^1.6.1',
        'camelcase-keys': '^4.2.0',
        codecov: '^3.0.0',
        'conventional-github-releaser': '^2.0.2',
        crc: '^3.5.0',
        'cross-env': '^5.1.4',
        'decamelize-keys': '^1.1.0',
        del: '^3.0.0',
        'del-cli': '^1.1.0',
        eslint: '^4.5.0',
        'eslint-config-webpack': '^1.2.5',
        'eslint-plugin-import': '^2.8.0',
        'eslint-plugin-prettier': '^2.6.0',
        execa: '^0.10.0',
        expect: '^22.4.3',
        'html-webpack-plugin': '^3.2.0',
        husky: '^0.14.3',
        istanbul: '^0.4.5',
        'jest-serializer-path': '^0.1.14',
        'jest-snapshot': '^22.4.3',
        'lint-staged': '^7.0.4',
        'memory-fs': '^0.4.1',
        minimist: '^1.2.0',
        'minimist-options': '^3.0.2',
        mocha: '^5.1.1',
        nsp: '^3.2.1',
        nyc: '^11.4.1',
        'pre-commit': '^1.2.2',
        prettier: '^1.11.1',
        'standard-version': '^4.3.0',
        'stylelint-webpack-plugin': '^0.10.4',
        webpack: '^4.6.0',
        'webpack-defaults': '^2.3.0' },
     engines: { node: '>= 6.9.0 <7.0.0 || >= 8.9.0' },
     files: [ 'data/', 'lib/' ],
     homepage: 'https://github.com/webpack-contrib/webpack-command',
     keywords: [ 'webpack' ],
     license: 'MIT',
     'lint-staged': { '*.js': [Array] },
     main: 'lib/index.js',
     name: 'webpack-command',
     nyc: { include: [Array] },
     peerDependencies: { webpack: '^4.4.0' },
     'pre-commit': 'lint-staged',
     repository: 
      { type: 'git',
        url: 'git+https://github.com/webpack-contrib/webpack-command.git' },
     scripts: 
      { 'ci:coverage': 'npm run test:coverage -- --runInBand',
        'ci:lint': 'npm run lint && npm run security',
        'ci:lint:commits': 'commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}',
        'ci:test': 'npm run test -- --runInBand',
        commitlint: 'commitlint',
        commitmsg: 'commitlint -e $GIT_PARAMS',
        defaults: 'webpack-defaults',
        lint: 'eslint --cache lib test',
        'lint-staged': 'lint-staged',
        prepublishOnly: 'mkdir -p data && cp -r lib/commands/defaults.json data/commands.json',
        release: 'standard-version',
        'release:ci': 'conventional-github-releaser -p angular',
        'release:validate': 'commitlint --from=$(git describe --tags --abbrev=0) --to=$(git rev-parse HEAD)',
        security: 'nsp check',
        test: 'npm run prepublishOnly && mocha test/test.js --check-leaks --exit',
        'test:coverage': 'mkdir -p coverage && nyc --silent npm test && npm run test:coverage:report',
        'test:coverage:report': 'nyc report --reporter=lcov --reporter=text-lcov --reporter=json --reporter=clover > coverage/lcov.info' },
     version: '0.2.1',
     readme: 'ERROR: No README data found!' },
  help: '\n  üêï A lightweight, modular, and opinionated webpack CLI\n\n  Usage\n    $ webpack [<config>, ...options]\n    $ webpack <entry-file> [...<entry-file>] <output-file>\n\n  Options\n    --context                     The root directory for resolving entry point and stats\n    --debug                       Switch loaders to debug mode\n    --devtool                     Enable devtool for better debugging experience.\n                                  e.g. --devtool eval-cheap-module-source-map\n    --entry                       The entry point\n    --help                        Show usage information and the options listed here\n    --log-level                   Limit all process console messages to a specific level and above\n                                  Levels: trace, debug, info, warn, error, silent\n    --log-time                    Instruct the logger and dependencies to display a timestamp\n    --progress                    Instructs webpack to track and display build progress\n                                  This is often used with --profile\n    --reporter                    Specifies the reporter to use for generating console output for a build\n    --require                     Preload one or more modules before loading the webpack configuration\n                                  Typically used for language-specific require hooks\n    --run-dev                     An alias for --debug --devtool eval-cheap-module-source-map --output-pathinfo\n    --run-prod                    An alias for --optimize-minimize --define process.env.NODE_ENV="production"\n    --version                     Display the webpack-command version\n    --watch                       Watch the filesystem for changes\n\n  Advanced\n    --bail                        Abort the compilation on first error\n    --cache                       Enable in memory caching\n    --define                      Define any free var in the bundle\n    --hot                         Enables Hot Module Replacement\n    --plugin                      Load this plugin\n    --prefetch                    Prefetch this request\n                                  e.g. --prefetch ./file.js\n    --profile                     Profile the compilation and include information in stats\n    --provide                     Provide these modules as free vars in all modules\n                                  e.g. --provide.jQuery jquery\n    --records-input-path          Path to the records file (reading)\n    --records-output-path         Path to the records file (writing)\n    --records-path                Path to the records file\n    --target                      The targeted execution environment\n    --watch-aggregate-timeout     Timeout for gathering changes while watching\n    --watch-poll                  The polling interval for watching (also enable polling)\n    --watch-stdin                 Exit the process when stdin is closed\n\n  Configuration File\n    --config                      Path to the config file\n    --config-name                 Name of the config to use\n    --config-register             Deprecated. Please use --require.\n\n    --mode                        Specifies the build mode to use; development or production\n\n  Modules\n    --module-bind                 Bind an extension to a loader\n    --module-bind-post            Bind an extension to a postLoader\n    --module-bind-pre             Bind an extension to a preLoader\n\n  Optimization\n    --optimize-max-chunks         Try to keep the chunk count below a limit\n    --optimize-min-chunk-size     Try to keep the chunk size above a limit\n    --optimize-minimize           Minimize javascript and switches loaders to minimizing\n\n  Output\n    --output                      The output path and file for compilation assets\n    --output-chunk-filename       The output filename for additional chunks\n    --output-filename             The output filename of the bundle\n    --output-jsonp-function       The name of the JSONP function used for chunk loading\n    --output-library              Expose the exports of the entry point as library\n    --output-library-target       The type for exposing the exports of the entry point as library\n    --output-path                 The output path for compilation assets\n    --output-pathinfo             Include a comment with the request for every dependency (require, import, etc.)\n    --output-public-path          The public path for the assets\n    --output-source-map-filename  The output filename for the SourceMap\n\n  Resolver\n    --resolve-alias               Setup a module alias for resolving\n                                  e.g. --resolve-alias.jquery jquery.plugin\n    --resolve-extensions          Setup extensions that should be used to resolve modules\n                                  e.g. .es6,.js\n    --resolve-loader-alias        Setup a loader alias for resolving\n\n\n    For further documentation, visit https://webpack.js.org/api/cli\n\n  Commands\n    help\n    teach\n\n    Type `webpack help <command>` for more information\n\n  Examples\n    $ webpack\n    $ webpack --help\n    $ webpack entry.js\n    $ webpack --config ../webpack.config.js\n',
  showHelp: [Function: showHelp],
  showVersion: [Function: showVersion],
  argv: 
   { debug: false,
     progress: false,
     runDev: false,
     d: false,
     runProd: false,
     p: false,
     watch: false,
     w: false,
     bail: false,
     cache: false,
     hot: false,
     profile: true,
     watchStdin: false,
     stdin: false,
     optimizeMinimize: false,
     outputPathinfo: false,
     json: true,
     mode: 'development',
     entry: 'domain',
     config: 'config/webpack.js' },
  commands: 
   { help: HelpCommand { init: true },
     teach: TeachCommand { init: true } },
  entries: [] }
